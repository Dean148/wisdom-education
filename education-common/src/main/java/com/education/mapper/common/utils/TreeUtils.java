package com.education.mapper.common.utils;import com.education.mapper.common.model.Tree;import java.util.ArrayList;import java.util.List;/** * 树形工具类 * @author zengjintao * @create 2019/6/20 15:36 * @since 1.0 **/public class TreeUtils {    public static List<Tree> buildTreeData(List<Tree> dataList) {        List<Tree> result = new ArrayList<>();        List<Tree> parentList = getRoot(dataList);        for (Tree tree : parentList) {            List<Tree> children = getChildrenTree(dataList, tree.getId());            if (ObjectUtils.isNotEmpty(children)) {                tree.setChildren(children);            }            result.add(tree);        }        return result;    }    public static List<Tree> getChildrenTree(List<Tree> dataList, int parentId) {        List<Tree> childrenTree = new ArrayList();        dataList.forEach(data -> {            if (data.getParentId() == parentId) {                childrenTree.add(data);            }        });        childrenTree.forEach(data -> {            List<Tree> children = getChildrenTree(dataList, data.getId());            if (ObjectUtils.isNotEmpty(children)) {                data.setChildren(children);            }        });        return childrenTree;    }    /**     * 获取顶级父类数据     * @param dataList     * @return     */    private static List<Tree> getRoot(List<Tree> dataList) {        List<Tree> rootList = new ArrayList<Tree>();        dataList.forEach(root -> {            if (root.getParentId() == 0) {                rootList.add(root);            }        });        return rootList;    }}
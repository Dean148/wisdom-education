<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.education.mapper.school.StudentInfoMapper">

    <select id="queryList" resultType="modelBeanMap">
        select student.*,
        school.name as school_name from student_info student left join school_info school on student.school_id = school.id
        <where>
            <if test="keyWord != null and keyWord != ''">
                <bind name="searchName" value="'%' + keyWord + '%'"/>
                and (student.name like #{searchName} or student.mobile like #{searchName})
            </if>
            <if test="gradeType != null and gradeType !=''">
                and student.grade_type = ${gradeType}
            </if>

            <if test="schoolId != null and schoolId != ''">
                and student.school_id = ${schoolId}
            </if>
        </where>
        order by student.id desc
    </select>

    <insert id="save" useGeneratedKeys="true" keyColumn="id" keyProperty="id" parameterType="map">
        insert into student_info
        <foreach collection="params.keys" item="key" open="(" close=")" separator="," >
            ${key}
        </foreach>
        values
        <foreach collection="params.values"  item="value" open="(" close=")" separator=",">
            #{value}
        </foreach>
    </insert>

    <insert id="batchSaveStudent" parameterType="list">
        insert into student_info(name, head_img, login_name, password, encrypt, age, sex, address, mobile, school_id, mother_name, father_name, grade_type, create_date)
        values
        <foreach collection="list" separator="," item="item">
            (
                #{item.name}, #{item.headImage}, #{item.loginName}, #{item.password}, #{item.encrypt}, #{item.age},
                #{item.sexId}, #{item.address}, #{item.mobile}, #{item.schoolId},
                #{item.motherName}, #{item.fatherName}, #{item.gradeTypeId}, #{item.createDate}
            )
        </foreach>
    </insert>


    <update id="update" parameterType="map">
        update student_info
        <foreach collection="params.keys" item="key" open="set" separator="," >
            ${key} = #{params[${key}]}
        </foreach>
        where id = #{params.id}
    </update>

    <delete id="deleteById" parameterType="Integer">
        delete from student_info where id = #{id}
    </delete>

    <delete id="deleteByIdOrSchoolId" parameterType="map">
        delete from student_info
        <where>
            <if test="studentId != null and studentId != ''">
                and id = #{studentId}
            </if>

            <if test="schoolId != null and schoolId != ''">
                and school_id = #{schoolId}
            </if>
        </where>
    </delete>

    <select id="findByLoginName" resultType="modelBeanMap">
           select
        student.id student_id,
         student.disabled_flag,
         student.head_img,
         student.grade_type,
         student.password,
          student.encrypt,
          student.login_ip,
          student.login_count,
         student.name as student_name,
         school.name as school_name, case student.sex
        when 1 then '男' when 2 then '女' else '未知' end sex from student_info student
        left join school_info school on student.school_id = school.id where student.login_name = #{loginName} limit 1
    </select>
</mapper>